name: EonXRP Full Deployment Pipeline

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    # Python Setup
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.11'
    
    # Node.js Setup
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    # Backend Testing
    - name: Install Backend Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Backend Tests
      run: |
        pytest backend/tests/
    
    # Frontend Testing
    - name: Install Frontend Dependencies
      run: |
        cd frontend
        npm install
    - name: Run Frontend Tests
      run: |
        cd frontend
        npm test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3

    # Backend Docker Build
    - name: Build Backend Docker Image
      run: docker build -t eonxrp-backend ./backend
    
    # Frontend Docker Build
    - name: Build Frontend Docker Image
      run: docker build -t eonxrp-frontend ./frontend

    # Push to GitHub Container Registry
    - name: Push Images to GHCR
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        docker tag eonxrp-backend ghcr.io/${{ github.repository }}/backend
        docker tag eonxrp-frontend ghcr.io/${{ github.repository }}/frontend
        docker push ghcr.io/${{ github.repository }}/backend
        docker push ghcr.io/${{ github.repository }}/frontend

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to Railway
      run: |
        npm install -g @railway/cli
        railway login --token ${{ secrets.RAILWAY_TOKEN }}
        railway link ${{ secrets.RAILWAY_PROJECT_ID }}
        railway up

    - name: Deploy to Vercel
      run: |
        npm install -g vercel
        vercel deploy --token ${{ secrets.VERCEL_TOKEN }} --prod
