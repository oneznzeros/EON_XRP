name: EON XRP Deployment

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    # Backend Testing
    - name: Install Backend Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
    - name: Run Backend Tests
      run: |
        cd backend
        pytest
    
    # Frontend Testing
    - name: Install Frontend Dependencies
      run: |
        cd frontend
        npm install
    - name: Run Frontend Tests
      run: |
        cd frontend
        npm test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and Push Backend
      uses: docker/build-push-action@v3
      with:
        context: ./backend
        push: true
        tags: ghcr.io/oneznzeos/eon-xrp-backend:latest
    
    - name: Build and Push Frontend
      uses: docker/build-push-action@v3
      with:
        context: ./frontend
        push: true
        tags: ghcr.io/oneznzeos/eon-xrp-frontend:latest
    
    - name: Deploy to Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          cd /path/to/eon-xrp
          docker-compose pull
          docker-compose up -d
          docker system prune -f
